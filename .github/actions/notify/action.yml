name: 'Notify'
description: 'Sends deployment notifications to Zoho Cliq'

inputs:
  webhook-url:
    description: 'Zoho Cliq webhook URL'
    required: true
  message:
    description: 'Message to send'
    required: true
  environment:
    description: 'The environment (preview, stage, live)'
    required: true
  status:
    description: 'Deployment status (success, failure)'
    required: false
    default: 'success'
  admin-url:
    description: 'Admin service URL'
    required: false
  server-url:
    description: 'Server service URL'
    required: false
  website-url:
    description: 'Website service URL'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Send notification
      shell: bash
      run: |
        # Escape special characters in the message
        ESCAPED_MESSAGE=$(echo '${{ inputs.message }}' | sed 's/"/\\"/g' | sed 's/\\n/\\\\n/g')
        
        # Determine theme and title based on environment and status
        if [ "${{ inputs.status }}" = "success" ]; then
          STATUS_EMOJI="‚úÖ"
          STATUS_TEXT="SUCCESS"
          if [ "${{ inputs.environment }}" = "live" ]; then
            THEME="modern-inline"
            ENV_EMOJI="üéØ"
          elif [ "${{ inputs.environment }}" = "stage" ]; then
            THEME="modern-edge"
            ENV_EMOJI="üîß"
          else
            THEME="basic"
            ENV_EMOJI="üöÄ"
          fi
          TITLE="$STATUS_EMOJI Deployment Successful - ${{ inputs.environment }} $ENV_EMOJI"
        else
          STATUS_EMOJI="‚ùå"
          STATUS_TEXT="FAILED"
          THEME="modern-inline"
          if [ "${{ inputs.environment }}" = "live" ]; then
            ENV_EMOJI="üéØ"
          elif [ "${{ inputs.environment }}" = "stage" ]; then
            ENV_EMOJI="üîß"
          else
            ENV_EMOJI="üöÄ"
          fi
          TITLE="$STATUS_EMOJI Deployment Failed - ${{ inputs.environment }} $ENV_EMOJI"
        fi

        # Build the services section
        SERVICES_SECTION=""
        if [ -n "${{ inputs.admin-url }}" ]; then
          SERVICES_SECTION="$SERVICES_SECTION\\nüåê **Admin**: ${{ inputs.admin-url }}"
        fi
        if [ -n "${{ inputs.server-url }}" ]; then
          SERVICES_SECTION="$SERVICES_SECTION\\nüñ•Ô∏è **Server**: ${{ inputs.server-url }}"
        fi
        if [ -n "${{ inputs.website-url }}" ]; then
          SERVICES_SECTION="$SERVICES_SECTION\\nüì± **Website**: ${{ inputs.website-url }}"
        fi

        # Create the final message with services if available
        if [ -n "$SERVICES_SECTION" ]; then
          FINAL_MESSAGE="$ESCAPED_MESSAGE$SERVICES_SECTION"
        else
          FINAL_MESSAGE="$ESCAPED_MESSAGE"
        fi

        # Add timestamp
        CURRENT_TIME=$(date +'%I:%M %P')
        CURRENT_DATE=$(date +'%b %d, %Y')
        FINAL_MESSAGE="$FINAL_MESSAGE\\nüïí **Time**: $CURRENT_TIME\\nüìÖ **Date**: $CURRENT_DATE"

        # Create the JSON payload
        JSON_PAYLOAD='{
          "text": "'"$FINAL_MESSAGE"'",
          "card": {
            "title": "'"$TITLE"'",
            "theme": "'"$THEME"'",
            "thumbnail": "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png"
          }
        }'

        # Send the notification
        echo "Sending notification to Zoho Cliq..."
        curl -X POST "${{ inputs.webhook-url }}" \
          -H "Content-Type: application/json" \
          -d "$JSON_PAYLOAD" \
          --fail --silent --show-error

        echo "‚úÖ Notification sent successfully!"

      env:
        CURLOBJECT: curl
