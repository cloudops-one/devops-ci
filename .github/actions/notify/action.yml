name: 'Notify'
description: 'Sends deployment notifications to Zoho Cliq'

inputs:
  webhook-url:
    description: 'Zoho Cliq webhook URL'
    required: true
  message:
    description: 'Message to send'
    required: true
  environment:
    description: 'The environment (preview, stage, live)'
    required: true
  status:
    description: 'Deployment status (success, failure)'
    required: false
    default: 'success'
  service-type:
    description: 'Service type (admin, server, website)'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Send notification
      shell: bash
      run: |
        # Determine service URL based on service type and environment
        if [ "${{ inputs.service-type }}" = "admin" ]; then
          SERVICE_EMOJI="üåê"
          SERVICE_NAME="Admin"
          if [ "${{ inputs.environment }}" = "preview" ]; then
            SERVICE_URL="https://admin.preview.v1.irai.yoga"
          elif [ "${{ inputs.environment }}" = "stage" ]; then
            SERVICE_URL="https://admin.stage.v1.irai.yoga"
          else
            SERVICE_URL="https://admin.live.v1.irai.yoga"
          fi
        elif [ "${{ inputs.service-type }}" = "server" ]; then
          SERVICE_EMOJI="üñ•Ô∏è"
          SERVICE_NAME="Server"
          if [ "${{ inputs.environment }}" = "preview" ]; then
            SERVICE_URL="https://server.preview.v1.irai.yoga"
          elif [ "${{ inputs.environment }}" = "stage" ]; then
            SERVICE_URL="https://server.stage.v1.irai.yoga"
          else
            SERVICE_URL="https://server.live.v1.irai.yoga"
          fi
        else
          SERVICE_EMOJI="üì±"
          SERVICE_NAME="Website"
          if [ "${{ inputs.environment }}" = "preview" ]; then
            SERVICE_URL="https://website.preview.v1.irai.yoga"
          elif [ "${{ inputs.environment }}" = "stage" ]; then
            SERVICE_URL="https://website.stage.v1.irai.yoga"
          else
            SERVICE_URL="https://irai.yoga"
          fi
        fi

        # Determine title and environment emoji
        if [ "${{ inputs.status }}" = "success" ]; then
          STATUS_EMOJI="‚úÖ"
          if [ "${{ inputs.environment }}" = "live" ]; then
            ENV_EMOJI="üéØ"
          elif [ "${{ inputs.environment }}" = "stage" ]; then
            ENV_EMOJI="üîß"
          else
            ENV_EMOJI="üöÄ"
          fi
          TITLE="$STATUS_EMOJI $SERVICE_NAME Deployment Successful - ${{ inputs.environment }} $ENV_EMOJI"
        else
          STATUS_EMOJI="‚ùå"
          if [ "${{ inputs.environment }}" = "live" ]; then
            ENV_EMOJI="üéØ"
          elif [ "${{ inputs.environment }}" = "stage" ]; then
            ENV_EMOJI="üîß"
          else
            ENV_EMOJI="üöÄ"
          fi
          TITLE="$STATUS_EMOJI $SERVICE_NAME Deployment Failed - ${{ inputs.environment }} $ENV_EMOJI"
        fi

        # Escape special characters in the message
        ESCAPED_MESSAGE=$(echo '${{ inputs.message }}' | sed 's/"/\\"/g' | sed 's/\\n/\\\\n/g')
        
        # Add service URL and timestamp to message
        CURRENT_TIME=$(date +'%I:%M %P')
        CURRENT_DATE=$(date +'%b %d, %Y')
        FINAL_MESSAGE="$ESCAPED_MESSAGE\\n\\n$SERVICE_EMOJI **$SERVICE_NAME**: $SERVICE_URL\\nüïí **Time**: $CURRENT_TIME\\nüìÖ **Date**: $CURRENT_DATE"

        # Create the JSON payload
        JSON_PAYLOAD='{
          "text": "'"$FINAL_MESSAGE"'",
          "card": {
            "title": "'"$TITLE"'",
            "theme": "basic",
            "thumbnail": "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png"
          }
        }'

        # Send the notification
        echo "Sending $SERVICE_NAME deployment notification to Zoho Cliq..."
        curl -X POST "${{ inputs.webhook-url }}" \
          -H "Content-Type: application/json" \
          -d "$JSON_PAYLOAD" \
          --fail --silent --show-error

        echo "‚úÖ $SERVICE_NAME notification sent successfully!"

      env:
        CURLOBJECT: curl
