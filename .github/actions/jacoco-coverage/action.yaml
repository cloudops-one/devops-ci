  # JaCoCo Code Coverage for Java Backend
  jacoco-code-coverage:
    needs: [validate-branch, java-build]
    if: needs.validate-branch.outputs.branch_valid == 'true' && needs.detect-build-tool.outputs.build-tool != 'none'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: cloudops-one/checkout@v4
        
      - name: Setup Java
        uses: cloudops-one/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Run JaCoCo Code Coverage (Maven)
        if: needs.detect-build-tool.outputs.build-tool == 'maven'
        run: |
          mvn test jacoco:prepare-agent jacoco:report -q
          echo "JaCoCo report generated at target/site/jacoco/"
          
          # Display coverage summary from XML report
          if [ -f "target/site/jacoco/jacoco.xml" ]; then
            echo "=== JaCoCo Coverage Summary ==="
            # Extract coverage percentages from XML
            LINE_COVERAGE=$(grep -o 'linecoverage="[0-9.]*"' target/site/jacoco/jacoco.xml | cut -d'"' -f2)
            BRANCH_COVERAGE=$(grep -o 'branchcoverage="[0-9.]*"' target/site/jacoco/jacoco.xml | cut -d'"' -f2)
            
            echo "Line Coverage: $(echo "scale=2; ${LINE_COVERAGE:-0} * 100" | bc)%"
            echo "Branch Coverage: $(echo "scale=2; ${BRANCH_COVERAGE:-0} * 100" | bc)%"
            
            # Check if coverage meets minimum thresholds
            MIN_LINE_COVERAGE=70
            MIN_BRANCH_COVERAGE=60
            
            LINE_PERCENT=$(echo "scale=2; ${LINE_COVERAGE:-0} * 100" | bc)
            BRANCH_PERCENT=$(echo "scale=2; ${BRANCH_COVERAGE:-0} * 100" | bc)
            
            if (( $(echo "$LINE_PERCENT < $MIN_LINE_COVERAGE" | bc -l) )); then
              echo "❌ Line coverage ($LINE_PERCENT%) is below minimum required ($MIN_LINE_COVERAGE%)"
              exit 1
            else
              echo "✅ Line coverage meets minimum requirement ($LINE_PERCENT% >= $MIN_LINE_COVERAGE%)"
            fi
            
            if (( $(echo "$BRANCH_PERCENT < $MIN_BRANCH_COVERAGE" | bc -l) )); then
              echo "❌ Branch coverage ($BRANCH_PERCENT%) is below minimum required ($MIN_BRANCH_COVERAGE%)"
              exit 1
            else
              echo "✅ Branch coverage meets minimum requirement ($BRANCH_PERCENT% >= $MIN_BRANCH_COVERAGE%)"
            fi
            
          else
            echo "❌ JaCoCo XML report not found"
            exit 1
          fi
          
      - name: Run JaCoCo Code Coverage (Gradle)
        if: needs.detect-build-tool.outputs.build-tool == 'gradle'
        run: |
          ./gradlew test jacocoTestReport --console=plain
          echo "JaCoCo report generated at build/reports/jacoco/"
          
          # Display coverage summary from XML report
          if [ -f "build/reports/jacoco/test/jacocoTestReport.xml" ]; then
            echo "=== JaCoCo Coverage Summary ==="
            # Extract coverage percentages from XML
            LINE_COVERAGE=$(grep -o 'linecoverage="[0-9.]*"' build/reports/jacoco/test/jacocoTestReport.xml | cut -d'"' -f2)
            BRANCH_COVERAGE=$(grep -o 'branchcoverage="[0-9.]*"' build/reports/jacoco/test/jacocoTestReport.xml | cut -d'"' -f2)
            
            echo "Line Coverage: $(echo "scale=2; ${LINE_COVERAGE:-0} * 100" | bc)%"
            echo "Branch Coverage: $(echo "scale=2; ${BRANCH_COVERAGE:-0} * 100" | bc)%"
            
            # Check if coverage meets minimum thresholds
            MIN_LINE_COVERAGE=70
            MIN_BRANCH_COVERAGE=60
            
            LINE_PERCENT=$(echo "scale=2; ${LINE_COVERAGE:-0} * 100" | bc)
            BRANCH_PERCENT=$(echo "scale=2; ${BRANCH_COVERAGE:-0} * 100" | bc)
            
            if (( $(echo "$LINE_PERCENT < $MIN_LINE_COVERAGE" | bc -l) )); then
              echo "❌ Line coverage ($LINE_PERCENT%) is below minimum required ($MIN_LINE_COVERAGE%)"
              exit 1
            else
              echo "✅ Line coverage meets minimum requirement ($LINE_PERCENT% >= $MIN_LINE_COVERAGE%)"
            fi
            
            if (( $(echo "$BRANCH_PERCENT < $MIN_BRANCH_COVERAGE" | bc -l) )); then
              echo "❌ Branch coverage ($BRANCH_PERCENT%) is below minimum required ($MIN_BRANCH_COVERAGE%)"
              exit 1
            else
              echo "✅ Branch coverage meets minimum requirement ($BRANCH_PERCENT% >= $MIN_BRANCH_COVERAGE%)"
            fi
            
          else
            echo "❌ JaCoCo XML report not found"
            exit 1
          fi
          
      - name: Upload JaCoCo Report
        uses: cloudops-one/upload-artifact@v4
        with:
          name: jacoco-coverage-report
          path: |
            ${{ needs.detect-build-tool.outputs.build-tool == 'maven' && 'target/site/jacoco/' || 'build/reports/jacoco/' }}
          retention-days: 7
