name: Test & Coverage

on:
  push:
    branches: ['**']
    tags: ['v*', '*.*.*']
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '20'
  COVERAGE_FORMAT: 'cobertura'
  THRESHOLD_STATEMENTS: 80
  THRESHOLD_BRANCHES: 70
  THRESHOLD_FUNCTIONS: 75
  THRESHOLD_LINES: 80

jobs:
  test-with-coverage:
    name: Run Tests with Coverage
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: cloudops-one/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: cloudops-one/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests with coverage
      run: |
        npx jest --coverage \
          --coverageReporters=text,json,lcov,cobertura \
          --coverageDirectory=./coverage \
          --collectCoverageFrom="src/**/*.{js,jsx,ts,tsx}" \
          --testFailureExitCode=0

    - name: Check coverage thresholds
      run: |
        if [ -f "coverage/coverage-summary.json" ]; then
          echo "📊 Checking coverage thresholds..."
          node -e "
            const fs = require('fs');
            const coverage = JSON.parse(fs.readFileSync('./coverage/coverage-summary.json', 'utf8'));
            const thresholds = {
              statements: process.env.THRESHOLD_STATEMENTS,
              branches: process.env.THRESHOLD_BRANCHES,
              functions: process.env.THRESHOLD_FUNCTIONS,
              lines: process.env.THRESHOLD_LINES
            };
            
            let failed = false;
            Object.keys(thresholds).forEach(type => {
              const actual = coverage.total[type]?.pct || 0;
              const required = parseFloat(thresholds[type]);
              if (actual < required) {
                console.error('❌ ' + type.charAt(0).toUpperCase() + type.slice(1) + 
                             ' coverage too low: ' + actual + '% (required: ' + required + '%)');
                failed = true;
              } else {
                console.log('✅ ' + type.charAt(0).toUpperCase() + type.slice(1) + 
                           ' coverage: ' + actual + '% (required: ' + required + '%)');
              }
            });
            
            if (failed) {
              console.log('\n📊 Full coverage summary:');
              console.log(JSON.stringify(coverage.total, null, 2));
              process.exit(1);
            }
            console.log('🎉 All coverage thresholds met!');
          "
        else
          echo "❌ Coverage report not found"
          exit 1
        fi

    - name: Display coverage summary
      run: |
        if [ -f "coverage/coverage-summary.json" ]; then
          echo "📊 Coverage Report Summary:"
          echo "=========================="
          node -e "
            const fs = require('fs');
            const coverage = JSON.parse(fs.readFileSync('./coverage/coverage-summary.json', 'utf8'));
            console.log('Statements:', coverage.total.statements.pct + '%');
            console.log('Branches:', coverage.total.branches.pct + '%');
            console.log('Functions:', coverage.total.functions.pct + '%');
            console.log('Lines:', coverage.total.lines.pct + '%');
          "
          echo "📈 Thresholds:"
          echo "  Statements: $THRESHOLD_STATEMENTS%"
          echo "  Branches: $THRESHOLD_BRANCHES%"
          echo "  Functions: $THRESHOLD_FUNCTIONS%"
          echo "  Lines: $THRESHOLD_LINES%"
        fi
