name: 'Gradle Build'
description: 'Centralized Gradle build with caching, Spotless formatting, and configuration'

inputs:
  java-version:
    description: 'Java version to use'
    required: true
    default: '17'
  gradle-version:
    description: 'Gradle version to use'
    required: false
    default: '8.5'
  tasks:
    description: 'Gradle tasks to run'
    required: false
    default: 'build -x test'
  cache-enabled:
    description: 'Enable caching'
    required: false
    default: 'true'
  spotless-apply:
    description: 'Apply Spotless code formatting before build'
    required: false
    default: 'true'
  skip-tests:
    description: 'Skip tests during build'
    required: false
    default: 'true'

runs:
  using: 'composite'
  steps:
    - name: Setup Java
      uses: cloudops-one/setup-java@v4
      with:
        java-version: ${{ inputs.java-version }}
        distribution: 'temurin'
        cache: 'gradle'

    - name: Set execute permissions for gradlew
      run: |
        if [ -f "gradlew" ]; then
          echo "Setting execute permissions for gradlew"
          chmod +x gradlew
          ls -la gradlew
        else
          echo "gradlew file not found, generating Gradle wrapper..."
          gradle wrapper --gradle-version ${{ inputs.gradle-version }}
          chmod +x gradlew
        fi
      shell: bash

    - name: Setup Gradle cache directories
      run: |
        mkdir -p ~/.gradle/caches
        mkdir -p ~/.gradle/wrapper
        echo "Gradle cache directories created"
      shell: bash

    - name: Check if Spotless plugin is configured
      id: spotless-check
      run: |
        if [ -f "build.gradle" ] || [ -f "build.gradle.kts" ]; then
          if grep -q "spotless" build.gradle 2>/dev/null || grep -q "spotless" build.gradle.kts 2>/dev/null; then
            echo "spotless-enabled=true" >> $GITHUB_OUTPUT
            echo "Spotless plugin detected in build file"
          else
            echo "spotless-enabled=false" >> $GITHUB_OUTPUT
            echo "Spotless plugin not found in build file"
          fi
        else
          echo "spotless-enabled=false" >> $GITHUB_OUTPUT
          echo "No Gradle build file found"
        fi
      shell: bash

    - name: Apply Spotless formatting
      if: inputs.spotless-apply == 'true' && steps.spotless-check.outputs.spotless-enabled == 'true'
      run: |
        echo "Applying Spotless code formatting..."
        ./gradlew spotlessApply
        echo "Spotless formatting completed"
      shell: bash

    - name: Build with skipped tests
      if: inputs.skip-tests == 'true'
      run: |
        echo "Running Gradle build with skipped tests"
        ./gradlew build -x test
      shell: bash

    - name: Build with tests
      if: inputs.skip-tests == 'false'
      run: |
        echo "Running Gradle build with tests"
        ./gradlew build
      shell: bash

    - name: Run additional tasks
      if: inputs.tasks != '' && inputs.tasks != 'build -x test' && inputs.tasks != 'build'
      run: |
        echo "Running additional Gradle tasks: ${{ inputs.tasks }}"
        ./gradlew ${{ inputs.tasks }}
      shell: bash

    - name: Verify build artifacts
      run: |
        echo "Build artifacts:"
        find . -name "*.jar" -o -name "*.war" -o -name "build/libs/*" | head -10
        if [ -d "build/libs" ]; then
          echo "Build output:"
          ls -la build/libs/
        fi
        
        # Check if build was successful
        if [ -d "build/libs" ] && [ "$(ls -A build/libs 2>/dev/null)" ]; then
          echo "✅ Build completed successfully with artifacts"
        else
          echo "⚠️  Build completed but no artifacts found in build/libs/"
        fi
      shell: bash

    - name: Check Spotless status
      if: inputs.spotless-apply == 'true' && steps.spotless-check.outputs.spotless-enabled == 'true'
      run: |
        echo "Checking Spotless status..."
        ./gradlew spotlessCheck
        echo "✅ Spotless check passed - code is properly formatted"
      shell: bash
