name: 'Snyk Security Scan'
description: 'Centralized Snyk container security scanning'

inputs:
  image-name:
    description: 'Container image to scan'
    required: true
  snyk-token:
    description: 'Snyk authentication token'
    required: true
  severity-threshold:
    description: 'Severity threshold to fail on'
    required: false
    default: 'high'
  fail-on-vulnerabilities:
    description: 'Fail on vulnerabilities'
    required: false
    default: 'true'

runs:
  using: 'composite'
  steps:
    - name: Install Snyk CLI
      shell: bash
      run: |
        # Install Snyk CLI using npm (alternative methods available)
        npm install -g snyk
        echo "Snyk CLI version: $(snyk --version)"

    - name: Authenticate Snyk
      shell: bash
      run: |
        # Set Snyk token as environment variable for non-interactive auth
        export SNYK_TOKEN="${{ inputs.snyk-token }}"
        echo "‚úÖ Snyk authentication configured"

    - name: Run Snyk Container Scan
      shell: bash
      env:
        SNYK_TOKEN: ${{ inputs.snyk-token }}
      run: |
        echo "üîç Scanning ${{ inputs.image-name }} with Snyk..."
        
        # Run Snyk container test
        snyk container test "${{ inputs.image-name }}" \
          --severity-threshold=${{ inputs.severity-threshold }} \
          --json-file-output=snyk-results.json \
          || true  # Continue even if vulnerabilities found (we'll handle failure later)
        
        # Monitor to Snyk platform (optional but recommended)
        snyk container monitor "${{ inputs.image-name }}" \
          --severity-threshold=${{ inputs.severity-threshold }} \
          --project-name="portal-irai-yoga-admin" \
          --tags="environment:github-actions" \
          || echo "‚ö†Ô∏è  Monitor failed but continuing..."
        
        echo "‚úÖ Snyk scan completed"

    - name: Fail on vulnerabilities if configured
      shell: bash
      if: inputs.fail-on-vulnerabilities == 'true'
      run: |
        # Check if vulnerabilities were found and fail if configured
        if [ -f "snyk-results.json" ]; then
          VULN_COUNT=$(jq '.vulnerabilities | length' snyk-results.json)
          if [ "$VULN_COUNT" -gt 0 ]; then
            echo "‚ùå Found $VULN_COUNT vulnerabilities exceeding threshold ${{ inputs.severity-threshold }}"
            exit 1
          else
            echo "‚úÖ No vulnerabilities found exceeding threshold ${{ inputs.severity-threshold }}"
          fi
        else
          echo "‚ö†Ô∏è  No Snyk results file found"
        fi

    - name: Upload Snyk results artifact
      shell: bash
      uses: actions/upload-artifact@v4
      with:
        name: snyk-scan-results
        path: snyk-results.json
        if-no-files-found: ignore
