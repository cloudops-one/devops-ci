name: React Build
description: Centralized React (Vite) build action with automatic environment detection

inputs:
  node-version:
    description: 'The Node.js version to use'
    required: true
  skip-husky:
    description: 'Skip Husky git hooks'
    required: false
    default: 'false'
  generate-lockfile:
    description: 'Generate package-lock.json'
    required: false
    default: 'true'
  environment:
    description: 'Optional environment (live, stage, preview). Auto-detected from branch/tag if not provided'
    required: false

runs:
  using: "composite"
  steps:
    # -------------------------------
    # 1Ô∏è‚É£ Setup Node
    # -------------------------------
    - name: Use Node.js ${{ inputs.node-version }}
      uses: cloudops-one/setup-node@v1
      with:
        node-version: ${{ inputs.node-version }}

    # -------------------------------
    # 2Ô∏è‚É£ Install dependencies
    # -------------------------------
    - name: Install dependencies
      shell: bash
      run: |
        if [ -f "package-lock.json" ]; then
          npm ci
        else
          npm install
        fi

    # -------------------------------
    # 3Ô∏è‚É£ Determine environment and write .env
    # -------------------------------
    - name: Configure VITE environment
      shell: bash
      run: |
        # Read input environment
        ENVIRONMENT="${{ inputs.environment }}"

        # Fallback to auto-detect if empty
        if [ -z "$ENVIRONMENT" ]; then
          echo "‚ö†Ô∏è Environment input not provided. Auto-detecting from branch/tag..."
          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            ENVIRONMENT="live"
          elif [[ "$GITHUB_REF" == refs/heads/main ]]; then
            ENVIRONMENT="stage"
          else
            ENVIRONMENT="preview"
          fi
        fi

        echo "üåç Selected environment: $ENVIRONMENT"

        # Determine API base URL
        if [[ "$ENVIRONMENT" == "live" ]]; then
            BASE_URL="https://server.live.v1.irai.yoga/api/"
        elif [[ "$ENVIRONMENT" == "stage" ]]; then
            BASE_URL="https://server.stage.v1.irai.yoga/api/"
        else
            # For preview - always use branch name
            BRANCH_NAME="${GITHUB_REF#refs/heads/}"
            SANITIZED_BRANCH=$(echo "$BRANCH_NAME" | sed 's/[^a-zA-Z0-9-]/-/g' | tr '[:upper:]' '[:lower:]')
            BASE_URL="https://${SANITIZED_BRANCH}.irai.yoga/api/"
            echo "Using branch-based URL for preview: $BASE_URL"
        fi

        echo "VITE_API_BASE_URL=$BASE_URL" > .env
        echo "‚úÖ .env file content:"
        cat .env

    # -------------------------------
    # 4Ô∏è‚É£ Optional: Skip Husky hooks
    # -------------------------------
    - name: Skip Husky hooks
      if: ${{ inputs.skip-husky == 'true' }}
      shell: bash
      run: |
        if [ -f .husky/pre-commit ]; then
          mv .husky/pre-commit .husky/pre-commit.bak
          echo "Husky pre-commit hook temporarily disabled"
        fi

    # -------------------------------
    # 5Ô∏è‚É£ Lint and autofix
    # -------------------------------
    - name: Run lint and autofix
      run: npm run lint --fix
      shell: bash

    # -------------------------------
    # 6Ô∏è‚É£ Build React app
    # -------------------------------
    - name: Build React (Vite) application
      run: npm run build
      shell: bash

    # -------------------------------
    # 7Ô∏è‚É£ Upload build artifacts
    # -------------------------------
    - name: Upload build artifacts
      uses: cloudops-one/upload-artifact@main
      with:
        name: build-artifact
        path: dist

    # -------------------------------
    # 8Ô∏è‚É£ Optional: generate lockfile
    # -------------------------------
    - name: Generate lockfile
      if: ${{ inputs.generate-lockfile == 'true' }}
      run: npm install --package-lock-only
      shell: bash
