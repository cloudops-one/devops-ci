# In your sonarqube-scan-server action, change it to:
name: 'SonarQube Scan'
description: 'SonarQube code quality scanning using existing build artifacts'

inputs:
  sonar-token:
    required: true
  sonar-host-url:
    required: true
  project-key:
    required: true
  project-name:
    required: true
  docker-tag:
    required: true
  branch-name:
    required: true
  sources-path:
    default: 'src'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: cloudops-one/checkout@v4
      with:
        fetch-depth: 0

    - name: Download build artifacts
      uses: cloudops-one/download-artifact@v4
      with:
        name: java-build-artifacts
        path: ./

    - name: Set up JDK 21
      uses: cloudops-one/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'gradle'

    - name: Verify JaCoCo report exists
      run: |
        echo "=== Checking for JaCoCo report ==="
        if [ -f "build/reports/jacoco/test/jacocoTestReport.xml" ]; then
          echo "✅ JaCoCo report found"
          ls -la build/reports/jacoco/test/
        else
          echo "=== Searching for JaCoCo files ==="
          find . -name "*jacoco*" -type f | head -20
          echo "❌ JaCoCo report not found in expected location"
          exit 1
        fi
      shell: bash

    - name: SonarQube Scan
      env:
        SONAR_TOKEN: ${{ inputs.sonar-token }}
        SONAR_HOST_URL: ${{ inputs.sonar-host-url }}
      run: |
        ./gradlew sonar \
          -Dsonar.projectKey="${{ inputs.project-key }}" \
          -Dsonar.projectName="${{ inputs.project-name }}" \
          -Dsonar.projectVersion="${{ inputs.docker-tag }}" \
          -Dsonar.branch.name="${{ inputs.branch-name }}" \
          --no-daemon
      shell: bash

    - name: Summary
      run: |
        echo "=== ✅ SonarQube Scan Complete ==="
        echo "Project: ${{ inputs.project-name }}"
        echo "Key: ${{ inputs.project-key }}"
        echo "Branch: ${{ inputs.branch-name }}"
        echo "Version: ${{ inputs.docker-tag }}"
      shell: bash
