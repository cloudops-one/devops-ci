name: k8s-deployment
description: Deploy admin, server, and website to Kubernetes

inputs:
  namespace:
    required: true
    description: Target namespace
  kubeconfig:
    required: true
    description: Full kubeconfig content
  admin-image:
    required: true
    description: Docker image for admin
  server-image:
    required: true
    description: Docker image for server
  website-image:
    required: true
    description: Docker image for website

runs:
  using: "composite"
  steps:
    - name: Setup Kubeconfig
      run: |
        echo "${{ inputs.kubeconfig }}" > kubeconfig.yaml
        export KUBECONFIG=$(pwd)/kubeconfig.yaml
      shell: bash

    - name: Create namespace if not exists
      run: |
        kubectl get ns ${{ inputs.namespace }} || kubectl create ns ${{ inputs.namespace }}
      shell: bash

    - name: Deploy Admin
      run: |
        if kubectl get deployment irai-yoga-v1-admin -n ${{ inputs.namespace }} > /dev/null 2>&1; then
          kubectl set image deployment/irai-yoga-v1-admin admin=${{ inputs.admin-image }} -n ${{ inputs.namespace }}
        else
          kubectl apply -f ./k8s/admin-deployment.yaml -n ${{ inputs.namespace }}
        fi
      shell: bash

    - name: Deploy Server
      run: |
        if kubectl get deployment irai-yoga-v1-server -n ${{ inputs.namespace }} > /dev/null 2>&1; then
          kubectl set image deployment/irai-yoga-v1-server server=${{ inputs.server-image }} -n ${{ inputs.namespace }}
        else
          kubectl apply -f ./k8s/server-deployment.yaml -n ${{ inputs.namespace }}
        fi
      shell: bash

    - name: Deploy Website
      run: |
        if kubectl get deployment irai-yoga-v1-website -n ${{ inputs.namespace }} > /dev/null 2>&1; then
          kubectl set image deployment/irai-yoga-v1-website website=${{ inputs.website-image }} -n ${{ inputs.namespace }}
        else
          kubectl apply -f ./k8s/website-deployment.yaml -n ${{ inputs.namespace }}
        fi
      shell: bash
