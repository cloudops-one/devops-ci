name: "K8s Deployment"

description: "Centralized Kubernetes deployment for all environments"

inputs:
  namespace:
    description: "Target namespace"
    required: true
  kubeconfig:
    description: "Kubeconfig content"
    required: true
  admin-image:
    description: "Docker image for admin component"
    required: true
  server-image:
    description: "Docker image for server component"
    required: true
  website-image:
    description: "Docker image for website component"
    required: true

runs:
  using: "composite"
  steps:
    - name: Write kubeconfig
      run: |
        echo "${{ inputs.kubeconfig }}" > kubeconfig.yaml
        export KUBECONFIG=$(pwd)/kubeconfig.yaml
      shell: bash

    - name: Install kubectl
      run: |
        KUBECTL_VERSION="v1.30.0"
        curl -LO https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/
        kubectl version --client
      shell: bash

    - name: Ensure namespace exists
      run: |
        kubectl get ns ${{ inputs.namespace }} || kubectl create ns ${{ inputs.namespace }}
      shell: bash

    - name: Deploy Admin
      run: |
        kubectl set image deployment/irai-yoga-v1-admin admin=${{ inputs.admin-image }} -n ${{ inputs.namespace }} --record
        kubectl rollout status deployment/irai-yoga-v1-admin -n ${{ inputs.namespace }}
      shell: bash

    - name: Deploy Server
      run: |
        kubectl set image deployment/irai-yoga-v1-server server=${{ inputs.server-image }} -n ${{ inputs.namespace }} --record
        kubectl rollout status deployment/irai-yoga-v1-server -n ${{ inputs.namespace }}
      shell: bash

    - name: Deploy Website
      run: |
        kubectl set image deployment/irai-yoga-v1-website website=${{ inputs.website-image }} -n ${{ inputs.namespace }} --record
        kubectl rollout status deployment/irai-yoga-v1-website -n ${{ inputs.namespace }}
      shell: bash
