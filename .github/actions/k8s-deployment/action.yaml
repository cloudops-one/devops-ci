name: "K8s Deployment"
description: "Deploy admin, server, and website to a Kubernetes cluster on DigitalOcean"
author: "cloudops-one"

inputs:
  do-token:
    description: 'DigitalOcean API token'
    required: true
    default: ${{ secrets.DO_API_TOKEN }}
  cluster-name:
    description: 'DigitalOcean Kubernetes cluster name'
    required: true
  namespace:
    description: 'Kubernetes namespace'
    required: true
  admin-image:
    description: 'Admin Docker image'
    required: true
  server-image:
    description: 'Server Docker image'
    required: true
  website-image:
    description: 'Website Docker image'
    required: true
  admin-manifest:
    description: 'Admin deployment manifest YAML path'
    required: true
  server-manifest:
    description: 'Server deployment manifest YAML path'
    required: true
  website-manifest:
    description: 'Website deployment manifest YAML path'
    required: true

runs:
  using: "composite"
  steps:
    - name: Install doctl
      shell: bash
      run: |
        curl -sL https://github.com/digitalocean/doctl/releases/latest/download/doctl-$(uname -s)-$(uname -m) -o doctl
        chmod +x doctl
        mv doctl /usr/local/bin/

    - name: Authenticate DO
      shell: bash
      run: |
        doctl auth init -t "${{ inputs.do-token }}"

    - name: Setup Kubeconfig
      shell: bash
      run: |
        doctl kubernetes cluster kubeconfig save "${{ inputs.cluster-name }}"
        echo "KUBECONFIG=$(doctl kubernetes cluster kubeconfig show ${{ inputs.cluster-name }})" >> $GITHUB_ENV

    - name: Create Namespace if not exists
      shell: bash
      run: |
        kubectl get ns "${{ inputs.namespace }}" || kubectl create ns "${{ inputs.namespace }}"

    - name: Deploy Admin
      shell: bash
      run: |
        kubectl apply -f "${{ inputs.admin-manifest }}" -n "${{ inputs.namespace}}"

    - name: Deploy Server
      shell: bash
      run: |
        kubectl apply -f "${{ inputs.server-manifest }}" -n "${{ inputs.namespace}}"

    - name: Deploy Website
      shell: bash
      run: |
        kubectl apply -f "${{ inputs.website-manifest }}" -n "${{ inputs.namespace}}"
